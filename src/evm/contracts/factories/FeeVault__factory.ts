/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { FeeVault, FeeVaultInterface } from "../FeeVault";

const _abi = [
  {
    type: "function",
    name: "depositOpenChannelFee",
    inputs: [
      {
        name: "src",
        type: "address",
        internalType: "address",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "ordering",
        type: "uint8",
        internalType: "enum ChannelOrder",
      },
      {
        name: "connectionHops",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "counterpartyPortId",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "depositSendPacketFee",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "gasLimits",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
      {
        name: "gasPrices",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawFeesToOwner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OpenChannelFeeDeposited",
    inputs: [
      {
        name: "sourceAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "version",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "ordering",
        type: "uint8",
        indexed: false,
        internalType: "enum ChannelOrder",
      },
      {
        name: "connectionHops",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
      {
        name: "counterpartyPortId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "feeAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SendPacketFeeDeposited",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "sequence",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
      {
        name: "gasLimits",
        type: "uint256[2]",
        indexed: false,
        internalType: "uint256[2]",
      },
      {
        name: "gasPrices",
        type: "uint256[2]",
        indexed: false,
        internalType: "uint256[2]",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "IncorrectFeeSent",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sent",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NoFeeSent",
    inputs: [],
  },
  {
    type: "error",
    name: "SenderNotDispatcher",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108bd806100826000396000f3fe6080604052600436106100555760003560e01c80630be6a22d1461005a57806318e3404b14610071578063715018a6146100845780638da5cb5b14610099578063f2fde38b146100c5578063fce34e40146100e5575b600080fd5b34801561006657600080fd5b5061006f6100f8565b005b61006f61007f366004610408565b610135565b34801561009057600080fd5b5061006f6101e4565b3480156100a557600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100d157600080fd5b5061006f6100e0366004610482565b6101f8565b61006f6100f3366004610557565b61026e565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610132573d6000803e3d6000fd5b50565b61013d6102ee565b600061015160208084013590850135610695565b61015d83358535610695565b61016791906106b4565b905034811461019757604051635c6dd11360e11b8152600481018290523460248201526044015b60405180910390fd5b7f0733dc80f277e205edf5d913fa5d91fa0c4cc2635db600b365471c688356c034858585856040516101cc94939291906106cc565b60405180910390a1506101de60018055565b50505050565b6101ec610347565b6101f660006103a1565b565b610200610347565b6001600160a01b0381166102655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018e565b610132816103a1565b6102766102ee565b3460000361029757604051633d28b18360e11b815260040160405180910390fd5b7f8ab5595b5ac9231b64513ba86f6bd9fb73c51cae40c36083f7dfc2298e4429e687878787878787346040516102d49897969594939291906107dc565b60405180910390a16102e560018055565b50505050505050565b6002600154036103405760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161018e565b6002600155565b6000546001600160a01b031633146101f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806040810183101561040257600080fd5b92915050565b60008060008060c0858703121561041e57600080fd5b84359350602085013567ffffffffffffffff8116811461043d57600080fd5b925061044c86604087016103f1565b915061045b86608087016103f1565b905092959194509250565b80356001600160a01b038116811461047d57600080fd5b919050565b60006020828403121561049457600080fd5b61049d82610466565b9392505050565b634e487b7160e01b600052604160045260246000fd5b80356003811061047d57600080fd5b60008083601f8401126104db57600080fd5b50813567ffffffffffffffff8111156104f357600080fd5b6020830191508360208260051b850101111561050e57600080fd5b9250929050565b60008083601f84011261052757600080fd5b50813567ffffffffffffffff81111561053f57600080fd5b60208301915083602082850101111561050e57600080fd5b600080600080600080600060a0888a03121561057257600080fd5b61057b88610466565b9650602088013567ffffffffffffffff8082111561059857600080fd5b818a0191508a601f8301126105ac57600080fd5b8135818111156105be576105be6104a4565b604051601f8201601f19908116603f011681019083821181831017156105e6576105e66104a4565b816040528281528d60208487010111156105ff57600080fd5b82602086016020830137600060208483010152809a5050505061062460408b016104ba565b965060608a013591508082111561063a57600080fd5b6106468b838c016104c9565b909650945060808a013591508082111561065f57600080fd5b5061066c8a828b01610515565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106af576106af61067f565b500290565b600082198211156106c7576106c761067f565b500190565b84815267ffffffffffffffff8416602082015260c081016040848184013760408360808401376000815295945050505050565b6003811061071d57634e487b7160e01b600052602160045260246000fd5b9052565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b878110156107cf5782840389528135601e1988360301811261078557600080fd5b8701858101903567ffffffffffffffff8111156107a157600080fd5b8036038213156107b057600080fd5b6107bb868284610721565b9a87019a9550505090840190600101610764565b5091979650505050505050565b60018060a01b03891681526000602060c08184015289518060c085015260005b81811015610818578b810183015185820160e0015282016107fc565b8181111561082a57600060e083870101525b50601f01601f191683019050610843604084018a6106ff565b60e083820301606084015261085c60e08201888a61074a565b90508281036080840152610871818688610721565b9150508260a0830152999850505050505050505056fea26469706673582212202c28044aa8e0de429301e04eee048d644ba3dd5c54ccc83287a5d74961165c0364736f6c634300080f0033";

type FeeVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeVault__factory extends ContractFactory {
  constructor(...args: FeeVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeeVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeVault__factory {
    return super.connect(runner) as FeeVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeVaultInterface {
    return new Interface(_abi) as FeeVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeVault {
    return new Contract(address, _abi, runner) as unknown as FeeVault;
  }
}
