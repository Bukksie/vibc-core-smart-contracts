/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { L1Block, L1BlockInterface } from "../L1Block";

const _abi = [
  {
    type: "function",
    name: "DEPOSITOR_ACCOUNT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "basefee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batcherHash",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hash",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1FeeOverhead",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1FeeScalar",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "number",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sequenceNumber",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setL1BlockValues",
    inputs: [
      {
        name: "_number",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_timestamp",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_basefee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_hash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_sequenceNumber",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_batcherHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_l1FeeOverhead",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_l1FeeScalar",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "timestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638381f58a116100715780638381f58a146101465780638b239f731461015a5780639e8c496614610163578063b80777ea1461016c578063e591b28214610187578063e81b2c6d146101ba57600080fd5b8063015d8eb9146100ae57806309bd5a60146100c357806354fd4d50146100df5780635cf249691461011057806364ca23ef14610119575b600080fd5b6100c16100bc3660046102da565b6101c3565b005b6100cc60025481565b6040519081526020015b60405180910390f35b610103604051806040016040528060058152602001640312e312e360dc1b81525081565b6040516100d6919061034c565b6100cc60015481565b60035461012d9067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100d6565b60005461012d9067ffffffffffffffff1681565b6100cc60055481565b6100cc60065481565b60005461012d90600160401b900467ffffffffffffffff1681565b6101a273deaddeaddeaddeaddeaddeaddeaddeaddead000181565b6040516001600160a01b0390911681526020016100d6565b6100cc60045481565b3373deaddeaddeaddeaddeaddeaddeaddeaddead0001146102505760405162461bcd60e51b815260206004820152603b60248201527f4c31426c6f636b3a206f6e6c7920746865206465706f7369746f72206163636f60448201527f756e742063616e20736574204c3120626c6f636b2076616c7565730000000000606482015260840160405180910390fd5b6000805467ffffffffffffffff988916600160401b026fffffffffffffffffffffffffffffffff199091169989169990991798909817909755600194909455600292909255600380549190941667ffffffffffffffff199190911617909255600491909155600555600655565b803567ffffffffffffffff811681146102d557600080fd5b919050565b600080600080600080600080610100898b0312156102f757600080fd5b610300896102bd565b975061030e60208a016102bd565b9650604089013595506060890135945061032a60808a016102bd565b979a969950949793969560a0850135955060c08501359460e001359350915050565b600060208083528351808285015260005b818110156103795785810183015185820160400152820161035d565b8181111561038b576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204f408f9254df6c2ea5efdf1a4ce1749701bde380432ab7b956edd1f86d932d4164736f6c634300080f0033";

type L1BlockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1BlockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1Block__factory extends ContractFactory {
  constructor(...args: L1BlockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      L1Block & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): L1Block__factory {
    return super.connect(runner) as L1Block__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1BlockInterface {
    return new Interface(_abi) as L1BlockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): L1Block {
    return new Contract(address, _abi, runner) as unknown as L1Block;
  }
}
