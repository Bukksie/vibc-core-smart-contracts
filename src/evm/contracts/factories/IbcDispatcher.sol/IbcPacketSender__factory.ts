/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IbcPacketSender,
  IbcPacketSenderInterface,
} from "../../IbcDispatcher.sol/IbcPacketSender";

const _abi = [
  {
    type: "function",
    name: "sendPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "timeoutTimestamp",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IbcPacketSender__factory {
  static readonly abi = _abi;
  static createInterface(): IbcPacketSenderInterface {
    return new Interface(_abi) as IbcPacketSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IbcPacketSender {
    return new Contract(address, _abi, runner) as unknown as IbcPacketSender;
  }
}
