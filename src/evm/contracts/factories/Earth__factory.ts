/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Earth, EarthInterface } from "../Earth";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_middleware",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ackPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "ack",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizeChannel",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizeMiddleware",
    inputs: [
      {
        name: "middleware",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizedChannelIds",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizedMws",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "generateAckPacket",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "srcPortAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "appData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "ackPacket",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "greet",
    inputs: [
      {
        name: "destPortAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "timeoutTimestamp",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mw",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onRecvUniversalPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "ackPacket",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onTimeoutUniversalPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onUniversalAcknowledgement",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "ack",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "recvedPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultMw",
    inputs: [
      {
        name: "_middleware",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "timeoutPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "UnauthorizedIbcMiddleware",
    inputs: [],
  },
  {
    type: "error",
    name: "ackAddressMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "ackDataTooShort",
    inputs: [],
  },
  {
    type: "error",
    name: "invalidChannelId",
    inputs: [],
  },
  {
    type: "error",
    name: "unauthorizedChannel",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161178338038061178383398101604081905261002f916100d5565b808061003a33610085565b600180546001600160a01b0319166001600160a01b03831617905561007d816001600160a01b03166000908152600260205260409020805460ff19166001179055565b505050610105565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e757600080fd5b81516001600160a01b03811681146100fe57600080fd5b9392505050565b61166f806101146000396000f3fe6080604052600436106101015760003560e01c80635b7615851161009557806392dfa3921161006457806392dfa392146102f5578063a742d78c14610315578063d24ba02414610335578063f12b758a14610355578063f2fde38b1461037557600080fd5b80635b76158514610261578063715018a61461028e578063866f3f97146102a35780638da5cb5b146102c357600080fd5b8063400d9f5d116100d1578063400d9f5d146101c45780634252ae9b146101e45780634eeb739114610213578063588152ca1461024157600080fd5b8062e82cef1461010d5780632eed7c701461012f5780633a7fbcbd146101745780633b90b042146101a457600080fd5b3661010857005b600080fd5b34801561011957600080fd5b5061012d610128366004610db1565b610395565b005b34801561013b57600080fd5b5061015f61014a366004610dd3565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b5061015f61018f366004610db1565b60026020526000908152604090205460ff1681565b3480156101b057600080fd5b5061012d6101bf366004610db1565b6103c8565b3480156101d057600080fd5b5061012d6101df366004610dec565b6103dc565b3480156101f057600080fd5b506102046101ff366004610dd3565b6104bc565b60405161016b93929190610ee9565b34801561021f57600080fd5b5061023361022e366004610dd3565b610660565b60405161016b929190610f1e565b34801561024d57600080fd5b5061012d61025c3660046110a4565b61074e565b34801561026d57600080fd5b5061028161027c366004610dec565b610901565b60405161016b9190611117565b34801561029a57600080fd5b5061012d610a87565b3480156102af57600080fd5b506102816102be366004611172565b610a9b565b3480156102cf57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016b565b34801561030157600080fd5b5061012d610310366004610dd3565b610af6565b34801561032157600080fd5b506001546102dd906001600160a01b031681565b34801561034157600080fd5b5061012d6103503660046111cb565b610b07565b34801561036157600080fd5b50610233610370366004610dd3565b610b85565b34801561038157600080fd5b5061012d610390366004610db1565b610b95565b61039d610c10565b6103a681610c6a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103d0610c10565b6103d981610c6a565b50565b3360009081526002602052604090205460ff1661040c57604051630ddfd93d60e11b815260040160405180910390fd5b600082815260036020526040902054829060ff1661043d57604051630100e70560e51b815260040160405180910390fd5b600660405180604001604052808581526020018461045a90611244565b9052815460018181018455600093845260209384902083516005909302019182558383015180519183019182559384015160028301556040840151600383015560608401519293919260048401906104b290826112d9565b5050505050505050565b600581815481106104cc57600080fd5b90600052602060002090600702016000915090508060000154908060010160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461052390611250565b80601f016020809104026020016040519081016040528092919081815260200182805461054f90611250565b801561059c5780601f106105715761010080835404028352916020019161059c565b820191906000526020600020905b81548152906001019060200180831161057f57829003601f168201915b5050509190925250506040805180820190915260058401805460ff161515825260068501805494959492935090916020840191906105d990611250565b80601f016020809104026020016040519081016040528092919081815260200182805461060590611250565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b505050505081525050905083565b6006818154811061067057600080fd5b9060005260206000209060050201600091509050806000015490806001016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820180546106c790611250565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390611250565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b505050505081525050905082565b3360009081526002602052604090205460ff1661077e57604051630ddfd93d60e11b815260040160405180910390fd5b600083815260036020526040902054839060ff166107af57604051630100e70560e51b815260040160405180910390fd5b60146107be6020840184611398565b905010156107df5760405163503b43db60e01b815260040160405180910390fd5b60006107ee6020840184611398565b6107fd916014916000916113de565b61080691611408565b60601c9050806001600160a01b03166108228560400151610c8e565b6001600160a01b03161461084957604051631863a42d60e31b815260040160405180910390fd5b600560405180606001604052808781526020018681526020018561086c9061144b565b9052815460018181018455600093845260209384902083516007909302019182558383015180519183019182559384015160028301556040840151600383015560608401519293919260048401906108c490826112d9565b5050506040820151805160058301805460ff1916911515919091178155602082015160068401906108f590826112d9565b50505050505050505050565b6040805180820190915260008152606060208201523360009081526002602052604090205460ff1661094657604051630ddfd93d60e11b815260040160405180910390fd5b600083815260036020526040902054839060ff1661097757604051630100e70560e51b815260040160405180910390fd5b600460405180604001604052808681526020018561099490611244565b9052815460018181018455600093845260209384902083516005909302019182558383015180519183019182559384015160028301556040840151600383015560608401519293919260048401906109ec90826112d9565b5050505050306001600160a01b031663866f3f9785610a0e8660000135610c8e565b610a1b6060880188611398565b6040518563ffffffff1660e01b8152600401610a3a94939291906114cc565b600060405180830381865afa158015610a57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7f91908101906114f7565b949350505050565b610a8f610c10565b610a996000610c9f565b565b604080518082019091526000815260606020820152604051806040016040528060011515815260200130868686604051602001610adb94939291906115b4565b60408051601f19818403018152919052905295945050505050565b610afe610c10565b6103d981610cef565b6001546001600160a01b0316631f3a583085610b29886001600160a01b031690565b8686866040518663ffffffff1660e01b8152600401610b4c9594939291906115fe565b600060405180830381600087803b158015610b6657600080fd5b505af1158015610b7a573d6000803e3d6000fd5b505050505050505050565b6004818154811061067057600080fd5b610b9d610c10565b6001600160a01b038116610c075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103d981610c9f565b6000546001600160a01b03163314610a995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bfe565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6000610c9982610d28565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80610d0d57604051631d6f5e8b60e01b815260040160405180910390fd5b6000908152600360205260409020805460ff19166001179055565b60006001600160a01b03821115610d915760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b6064820152608401610bfe565b5090565b80356001600160a01b0381168114610dac57600080fd5b919050565b600060208284031215610dc357600080fd5b610dcc82610d95565b9392505050565b600060208284031215610de557600080fd5b5035919050565b60008060408385031215610dff57600080fd5b8235915060208301356001600160401b03811115610e1c57600080fd5b830160808186031215610e2e57600080fd5b809150509250929050565b60005b83811015610e54578181015183820152602001610e3c565b83811115610e63576000848401525b50505050565b60008151808452610e81816020860160208601610e39565b601f01601f19169290920160200192915050565b8051825260208101516020830152604081015160408301526000606082015160806060850152610a7f6080850182610e69565b8051151582526000602082015160406020850152610a7f6040850182610e69565b838152606060208201526000610f026060830185610e95565b8281036040840152610f148185610ec8565b9695505050505050565b828152604060208201526000610a7f6040830184610e95565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610f6f57610f6f610f37565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610f9d57610f9d610f37565b604052919050565b60006001600160401b03821115610fbe57610fbe610f37565b50601f01601f191660200190565b600082601f830112610fdd57600080fd5b8135610ff0610feb82610fa5565b610f75565b81815284602083860101111561100557600080fd5b816020850160208301376000918101602001919091529392505050565b60006080828403121561103457600080fd5b604051608081016001600160401b03828210818311171561105757611057610f37565b81604052829350843583526020850135602084015260408501356040840152606085013591508082111561108a57600080fd5b5061109785828601610fcc565b6060830152505092915050565b6000806000606084860312156110b957600080fd5b8335925060208401356001600160401b03808211156110d757600080fd5b6110e387838801611022565b935060408601359150808211156110f957600080fd5b5084016040818703121561110c57600080fd5b809150509250925092565b602081526000610dcc6020830184610ec8565b60008083601f84011261113c57600080fd5b5081356001600160401b0381111561115357600080fd5b60208301915083602082850101111561116b57600080fd5b9250929050565b6000806000806060858703121561118857600080fd5b8435935061119860208601610d95565b925060408501356001600160401b038111156111b357600080fd5b6111bf8782880161112a565b95989497509550505050565b6000806000806000608086880312156111e357600080fd5b6111ec86610d95565b94506020860135935060408601356001600160401b038082111561120f57600080fd5b61121b89838a0161112a565b909550935060608801359150808216821461123557600080fd5b50809150509295509295909350565b6000610c993683611022565b600181811c9082168061126457607f821691505b60208210810361128457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156112d457600081815260208120601f850160051c810160208610156112b15750805b601f850160051c820191505b818110156112d0578281556001016112bd565b5050505b505050565b81516001600160401b038111156112f2576112f2610f37565b611306816113008454611250565b8461128a565b602080601f83116001811461133b57600084156113235750858301515b600019600386901b1c1916600185901b1785556112d0565b600085815260208120601f198616915b8281101561136a5788860151825594840194600190910190840161134b565b50858210156113885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808335601e198436030181126113af57600080fd5b8301803591506001600160401b038211156113c957600080fd5b60200191503681900382131561116b57600080fd5b600080858511156113ee57600080fd5b838611156113fb57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156114355780818660140360031b1b83161692505b505092915050565b80151581146103d957600080fd5b60006040823603121561145d57600080fd5b611465610f4d565b82356114708161143d565b815260208301356001600160401b0381111561148b57600080fd5b61149736828601610fcc565b60208301525092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8481526001600160a01b0384166020820152606060408201819052600090610f1490830184866114a3565b6000602080838503121561150a57600080fd5b82516001600160401b038082111561152157600080fd5b908401906040828703121561153557600080fd5b61153d610f4d565b82516115488161143d565b8152828401518281111561155b57600080fd5b80840193505086601f84011261157057600080fd5b82519150611580610feb83610fa5565b828152878584860101111561159457600080fd5b6115a383868301878701610e39565b938101939093525090949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152506361636b2d60e01b60288301528284602c8401375060009101602c019081529392505050565b85815284602082015260806040820152600061161e6080830185876114a3565b90506001600160401b0383166060830152969550505050505056fea2646970667358221220454334c299aeb24891575d38c29ea33a651032ac71a89e41bd8786bf632cdf5264736f6c634300080f0033";

type EarthConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarthConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Earth__factory extends ContractFactory {
  constructor(...args: EarthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _middleware: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_middleware, overrides || {});
  }
  override deploy(
    _middleware: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_middleware, overrides || {}) as Promise<
      Earth & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Earth__factory {
    return super.connect(runner) as Earth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarthInterface {
    return new Interface(_abi) as EarthInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Earth {
    return new Contract(address, _abi, runner) as unknown as Earth;
  }
}
